#!/usr/bin/python

#The MIT License (MIT)
#
#Copyright (c) 2015 Sam Yaple
#
#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:
#
#The above copyright notice and this permission notice shall be included in all
#copies or substantial portions of the Software.
#
#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#SOFTWARE.

DOCUMENTATION = '''
---
module: ceph_osd_list
version_added: 1.8.2
short_description: Very hacked, very targeted module
description:
     - This will return a list of all devices with a GPT name of 'CEPH_OSD' and
       a filesystem uuid. This is targeted until a more generic module is
       written.
options:
  partition_name:
    description:
      - Partition name
    default: 'CEPH_OSD'
    type: bool
author: Sam Yaple
'''

EXAMPLES = '''
- hosts: ceph-osd
  tasks:
    - name: Return all valid formated devices wit hthe name CEPH_OSD
      ceph_osd_list:
      register: osds
'''

try:
    import sys
    import subprocess
except ImportError, e:
    print "failed=True msg='failed to import python module: %s'" % e
    sys.exit(1)

def main():
    module = AnsibleModule(
        argument_spec = dict(
            partition_name = dict(default='CEPH_OSD', type='str')
        ),
        supports_check_mode = True
    )

    partition_name = module.params.get('partition_name')

    try:
        disks = subprocess.check_output("parted -l", shell=True).split('\n')

        osd_all = []
        osd_uninitialized = []
        osd_initialized = []

        for line in disks:
            d = line.split(' ')

            if d[0] == 'Disk':
                dev = d[1][:-1]

            if "CEPH_OSD" in line:
                osd_all.append(dev + d[1])

        if not osd_all:
            module.exit_json(initialized=None, uninitialized=None)

        for k in osd_all:
            try:
                c = subprocess.check_output("blkid " + k, shell=True).split('"')[1]
                osd_initialized.append({'device': k, 'fs_uuid': c})
            except subprocess.CalledProcessError:
                osd_uninitialized.append(k)
                continue

        module.exit_json(initialized=osd_initialized, unitialized=osd_uninitialized)

    except Exception as e:
        module.exit_json(failed=True, msg=repr(e))

# import module snippets
from ansible.module_utils.basic import *

if __name__ == '__main__':
    main()
