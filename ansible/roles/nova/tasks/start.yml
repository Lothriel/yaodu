---
- name: Merge dicts
  merge_dict:
    initial: "{{ docker_vars.env }}"
    update:
      SERVICE: 'api'
  register: env

- name: Starting nova-api
  docker:
    docker_api_version: '1.18'
    name: "nova-api"
    image: "{{ docker_registry }}/yaodu/nova"
    state: "running"
    privileged: true
    net: "host"
    env: "{{ env.out }}"
  when: inventory_hostname in groups['nova']

- name: Merge dicts
  merge_dict:
    initial: "{{ docker_vars.env }}"
    update:
      SERVICE: 'scheduler'
  register: env

- name: Starting nova-scheduler
  docker:
    docker_api_version: '1.18'
    name: "nova-scheduler"
    image: "{{ docker_registry }}/yaodu/nova"
    state: "running"
    net: "host"
    env: "{{ env.out }}"
  when: inventory_hostname in groups['nova']

- name: Merge dicts
  merge_dict:
    initial: "{{ docker_vars.env }}"
    update:
      SERVICE: 'conductor'
  register: env

- name: Starting nova-conductor
  docker:
    docker_api_version: '1.18'
    name: "nova-conductor"
    image: "{{ docker_registry }}/yaodu/nova"
    state: "running"
    net: "host"
    env: "{{ env.out }}"
  when: inventory_hostname in groups['nova']

- name: Merge dicts
  merge_dict:
    initial: "{{ docker_vars.env }}"
    update:
      SERVICE: 'console'
  register: env

- name: Starting nova-console
  docker:
    docker_api_version: '1.18'
    name: "nova-console"
    image: "{{ docker_registry }}/yaodu/nova"
    state: "running"
    net: "host"
    env: "{{ env.out }}"
  when: inventory_hostname in groups['nova']

- name: Merge dicts
  merge_dict:
    initial: "{{ docker_vars.env }}"
    update:
      SERVICE: 'consoleauth'
  register: env

- name: Starting nova-consoleauth
  docker:
    docker_api_version: '1.18'
    name: "nova-consoleauth"
    image: "{{ docker_registry }}/yaodu/nova"
    state: "running"
    net: "host"
    env: "{{ env.out }}"
  when: inventory_hostname in groups['nova']

- name: Merge dicts
  merge_dict:
    initial: "{{ docker_vars.env }}"
    update:
      SERVICE: 'spicehtml5proxy'
  register: env

- name: Starting nova-spicehtml5proxy
  docker:
    docker_api_version: '1.18'
    name: "nova-spicehtml5proxy"
    image: "{{ docker_registry }}/yaodu/nova"
    state: "running"
    net: "host"
    env: "{{ env.out }}"
  when: inventory_hostname in groups['nova']

- name: Merge dicts
  merge_dict:
    initial: "{{ docker_vars.env }}"
    update:
      SERVICE: 'compute'
  register: env

- name: Starting nova-compute
  docker:
    docker_api_version: '1.18'
    name: "nova-compute"
    image: "{{ docker_registry }}/yaodu/nova"
    state: "running"
    privileged: true
    net: "host"
    volumes: "/opt/yaodu/libvirt/instances/:/var/lib/nova/instances/,/opt/yaodu/ceph/{{ ceph_cluster_name }}.conf:/etc/ceph/{{ ceph_cluster_name }}.conf:ro,/opt/yaodu/ceph/{{ ceph_cluster_name }}.client.nova.keyring:/etc/ceph/{{ ceph_cluster_name }}.client.nova.keyring:ro,/run/:/run/"
    env: "{{ env.out }}"
  when: inventory_hostname in groups['nova-compute']
