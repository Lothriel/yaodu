[DEFAULT]
verbose = true
debug = true

lock_path = /var/lock/neutron

rabbit_hosts = {% for host in groups['message-broker'] %}{{ hostvars[host]['ansible_hostname'] }}:5672{% if not loop.last %},{% endif %}{% endfor %}

rabbit_virtual_host = {{ rabbitmq_neutron_vhost }}
rabbit_userid = {{ rabbitmq_neutron_user }}
rabbit_password = {{ rabbitmq_neutron_password }}
rabbit_ha_queues = true

notification_driver = neutron.openstack.common.notifier.rpc_notifier

interface_driver = neutron.agent.linux.interface.OVSInterfaceDriver

network_device_mtu = 1450
allow_overlapping_ips = true
core_plugin = ml2
service_plugins = router

# DHCP Agent
enable_isolated_metadata = true
enable_metadata_network = true
dnsmasq_config_file = /etc/neutron/dnsmasq.conf
dhcp_delete_namespace = true

# L3 Agent
enable_metadata_proxy = true
agent_mode = legacy
external_network_bridge = br-ex
router_delete_namespaces = true
ha_vrrp_auth_password = {{ neutron_l3ha_secret }}

# Metadata Agent
auth_url = http://{{ yaodu_api_vip }}:5000/v2.0
nova_metadata_ip = {{ yaodu_api_vip }}
metadata_proxy_shared_secret = {{ metadata_shared_secret }}
admin_tenant_name = service
admin_user = neutron
admin_password = {{ keystone_neutron_password }}

nova_url = http://{{ yaodu_api_vip }}:8774/v2
nova_admin_username = nova
nova_admin_tenant_id = ##KEYSTONE_NOVA_TENANT_ID##
nova_admin_password = {{ keystone_nova_password }}
nova_admin_auth_url = http://{{ yaodu_api_vip }}:5000/v2.0

[agent]
root_helper = sudo neutron-rootwrap /etc/neutron/rootwrap.conf

[database]
connection = mysql://neutron:{{ database_neutron_password }}@{{ yaodu_api_vip }}/neutron

[keystone_authtoken]
identity_uri = http://{{ yaodu_api_vip }}:35357
auth_uri = http://{{ yaodu_api_vip }}:5000/v2.0
admin_tenant_name = service
admin_user = neutron
admin_password = {{ keystone_neutron_password }}
