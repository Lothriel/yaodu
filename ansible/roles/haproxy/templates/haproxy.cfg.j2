global
#        log /dev/log    local0
#        log /dev/log    local1 notice
        chroot /var/lib/haproxy
#        stats socket /run/haproxy/admin.sock mode 660 level admin
#        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL).
        ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

listen galera
	bind *:3306
	mode tcp
	option mysql-check user haproxy
{% for host in groups['ceph-mon'] %}
	server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_br_mgmt']['ipv4']['address'] }}:3306 check inter 2000 rise 2 fall 5 {% if not loop.first %}backup{% endif %}

{% endfor %}


listen keystone_admin
        bind *:35357
{% for host in groups['keystone'] %}
	server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_br_mgmt']['ipv4']['address'] }}:35357 check inter 2000 rise 2 fall 5

{% endfor %}


listen keystone_user
        bind *:5000
{% for host in groups['keystone'] %}
	server {{ hostvars[host]['ansible_hostname'] }} {{ hostvars[host]['ansible_br_mgmt']['ipv4']['address'] }}:500 check inter 2000 rise 2 fall 5

{% endfor %}
